apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: anchore
inputs:
  server-url:
    required: true
  server-username:
    required: true
  server-password:
    required: true
  server-account-name:
    required: true
  server-proxy:
    description: "server-proxy"
  registry-url:
    required: true
  registry-username:
    required: true
  registry-password:
    required: true
  image-source:
    required: true
  image-location:
    required: true
  image-tag:
    required: true
runs:
  using: composite
  steps:
    - id: anchore
      name: anchore
      uses: docker://registry.saas-dev.beescloud.com/staging/compliance-anchore:main-07b62d0d4f90650460d2f5349755417fba60bd06
      shell: bash
      env:
        RUN_ID: ${{ cloudbees.run_id }}
        JOB_ID: ${{ job.id }}
        STEP_ID: ${{ step.internal.id }}
        DNS_URL: ${{ cloudbees.api.url }}
        JWT_TOKEN: ${{ cloudbees.api.token }} 
        REGISTRY_URL: ${{ inputs.registry-url }}
        REGISTRY_USERNAME: ${{ inputs.registry-username }}
        REGISTRY_PASSWORD: ${{ inputs.registry-password }}
        HTTPS_PROXY: ${{ inputs.server-proxy }}
        CONFIG_JSON: '{\"port\":\"5001\",\"metaInfo\":{\"url\":\"${{ inputs.server-url }}\",\"username\":\"${{ inputs.server-username }}\",\"password\":\"${{ inputs.server-password }}\",\"client_secret\":\"${{ inputs.server-account-name }}\",\"toolName\":\"anchore\"},\"orchestratorInfo\":{\"assetSubType\":\"${{ inputs.image-source }}\",\"assetType\":\"BINARY\",\"assetIdentifier\":\"${{ inputs.image-location }}\",\"profileIdentifier\":\"${{ inputs.image-tag }}\"},\"metaInformation\":{\"actor\":\"${{ cloudbees.event.head_commit.author.name }}\",\"commit_id\":\"NA\",\"tenent_info\":\"NA\",\"scanner_type\":\"Container\",\"pipeline_info\":{\"id\":\"04612\",\"name\":\"test_pipeline\",\"step_id\":\"04612_test_pipeline\"}}}'
      run: |
        set -x
        cd /
        echo "RUN ID: ${{ cloudbees.run_id }}"
        echo "Job ID: ${{ job.id }}"
        echo "Step ID: ${{ step.internal.id }}"
        /bin/bash -c "./executables/anchore & while ! nc -z localhost 5001; do sleep 1; done && ./executables/orchestrator -scanConfig \"${CONFIG_JSON}\" execute-analyser && exit"
